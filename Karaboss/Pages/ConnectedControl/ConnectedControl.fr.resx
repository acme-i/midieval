<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>128, 13</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Rechercher une chanson</value>
  </data>
  <data name="label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>175, 13</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Rechercher un artiste (MusicBrainz)</value>
  </data>
  <data name="backButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJ3SURBVDhPrZBbSJNxGMZdQ1vTtHTpYpuBh5V4Sitn01GQ
        inUTaBfFLlyBmTOp6LAxiJaFTEzBaihBx0kSzdN0hzS/MacWzRw51Dk2m0w6QDdFdePF0/Z92/JEV/3g
        vfs/v/f9PxFrsS8RkH2oR7FVgOIR/7wWQDomgW5eg+CTjVn4bEPtlATHbOVoc93Gc/cdtDnqoLQdxxlz
        DgT9bBzpFcLi6lsvCoSF4wW4OSdHt7cDHXMyNE6JcWW8COdHc8NTNZKB9EdJsDjXSGrfS3Br9hqeuBrQ
        Ol0DxdtSdLqU+L38A1pP0ypJtTkLe+7vwoLPRknsPgIiIh/qmctomKzEpbECaOavIwSx1LlKUDeag0Nd
        HDS+UlAC2WQ9zk6UQvbmMPlgZdj304mrE8XhcI0lG2IzHyeJNBTey6YEIr0AF6z714UDBLbrF9vJ6feq
        of14FxUjKSgb4oGlZMDi9nch0gnI8I13R4Oxf1M6xEWRiQ1uSzTsi4RfoKUEay/4tfyd3BgYjacVzzwt
        eOhuxgHjDuw1xGO7PIr6gtQkQdVwRljydIXE/EmL8mEeSoY4OGhKRJ4hAZn6bUjWRYMvT6YEAw4NCjvZ
        ZDhUknpWFlQAL70PkG9gIde/NWUgBjwdEwntURA3VlCCACWPhThhTMMpIj1ckspxkRQQX/TYPRhHbt3Z
        z0BsDx2s2jjYZ/z/D2F3E0htTkSZgRcuKXBupVWEHCMHXN0WxPdGgtlNQ9Q5GtQvVH/DIUan+7BPlYXU
        jq1kSfzBWPLcpL7NiOnZBEYbDazquI3DIb59dUJtUCFPkQmmlA5GNR2RVTSknOZC2iRZffb/ISLiD0t/
        Ci5vfn9ZAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="forwardButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJVSURBVDhPrZFfTFJxFMchphGakdGkBbVQKVdBOfvrrvqQ
        zvXSVq2VtthsZAJba7aAejFrGStbbjB4arU16yExUNBJXlJD18wcyJ90VBL1FG2prZcevnHvhWuYbT30
        3c7LvefzOWfnx1ma0NcpGMNGEKMEiBcEKrwEdK80cM+6kWpZPvFvMWgDGhwer0XHzA10Ru+gY0qLlvEj
        aPAqsM8hxiFnFXyxkT9FFFw+dhDXIgZ0zdpgi+hx8009LvnKoRtWsqUaLEHxfTF8H5ZItH4Nrocv48FM
        K+4GGlnAFbNmCKhSe3dgm0WGeCLGSIJfAiDIUlhCzWh9fQwXX+6lG/0JElTi399mCLTDClQ+3ggT2cYI
        jH4Dzo1WQz9WldHYNnECP37OZ0gah3ai3ivHSbIIByy7GUFFP4ELI2UZcLqevjPRAiofFyL0t6ODMtQM
        SCFq4acEruQzJX/c859Ntf497xdCqB6QoLxfDEl7TkrQ/e8C9+cn2NO3Hrvc+VhryGYEuudNUHlK2LVr
        PVK66kg5rGF9CgUcnzppeLtLiE3OHMiNWxhB37QT+x+JaTh9JEpgTj5rOhSsTE6V9eRC6hRgnTUbp011
        jIBK9cNKHO8rwimymD1SdD7Iwlt719BTNzj4yLPzIGoSYio6uSgIxidReLsANW4pe6TmiTO4FbpCT5U4
        VyG/OwuCLi6yz3Nhs5sX4XRGp4dQZlKi0LaaPpK8N49et+DZSuTaV4DfwYVILVweTmduLgGbx4zSqwoI
        NDzw1TxkqbiQNWyGrr0Jwd/X/j/hcH4Bm5kGEb4Ssu0AAAAASUVORK5CYII=
</value>
  </data>
</root>